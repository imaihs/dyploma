#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_inter_SemiBold_28_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0026, uni0026], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, uni0050], Second char = [0x0026, uni0026], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x0026, uni0026], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0031, uni0031], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, uni0061], Second char = [0x0031, uni0031], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, uni006D], Second char = [0x0031, uni0031], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, uni006E], Second char = [0x0031, uni0031], Kerning dist = -1)
    { 0x0037, -2 },  // (First char = [0x0037, uni0037], Second char = [0x0034, uni0034], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0034, uni0034], Kerning dist = -2)
    { 0x0030, -1 },  // (First char = [0x0030, uni0030], Second char = [0x0037, uni0037], Kerning dist = -1)
    { 0x0037,  1 },  // (First char = [0x0037, uni0037], Second char = [0x0037, uni0037], Kerning dist = 1)
    { 0x0039, -1 },  // (First char = [0x0039, uni0039], Second char = [0x0037, uni0037], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x003A, uni003A], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, uni0054], Second char = [0x003A, uni003A], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, uni0041], Second char = [0x003F, uni003F], Kerning dist = -2)
    { 0x0037, -3 },  // (First char = [0x0037, uni0037], Second char = [0x0041, uni0041], Kerning dist = -3)
    { 0x003F, -2 },  // (First char = [0x003F, uni003F], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, uni0044], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, uni0050], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x006F, -1 },  // (First char = [0x006F, uni006F], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0076, -2 },  // (First char = [0x0076, uni0076], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x0026, -2 },  // (First char = [0x0026, uni0026], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x003A, -1 },  // (First char = [0x003A, uni003A], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, uni0041], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, uni0044], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, uni0061], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, uni0065], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0067, -1 },  // (First char = [0x0067, uni0067], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, uni006D], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, uni006E], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, uni006F], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0072, -2 },  // (First char = [0x0072, uni0072], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0073, -2 },  // (First char = [0x0073, uni0073], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0074, -1 },  // (First char = [0x0074, uni0074], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x0054, uni0054], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0061, uni0061], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0061, uni0061], Kerning dist = -2)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0065, uni0065], Kerning dist = -2)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0067, uni0067], Kerning dist = -2)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x006D, uni006D], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x006E, uni006E], Kerning dist = -2)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x006F, uni006F], Kerning dist = -2)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0072, uni0072], Kerning dist = -2)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0073, uni0073], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0073, uni0073], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0074, uni0074], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, uni0072], Second char = [0x0074, uni0074], Kerning dist = 1)
    { 0x0026, -1 },  // (First char = [0x0026, uni0026], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, uni0041], Second char = [0x0076, uni0076], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0076, uni0076], Kerning dist = -2)
    { 0x0061, -1 },  // (First char = [0x0061, uni0061], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, uni006D], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, uni006E], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, uni006F], Second char = [0x0076, uni0076], Kerning dist = -1)
};
