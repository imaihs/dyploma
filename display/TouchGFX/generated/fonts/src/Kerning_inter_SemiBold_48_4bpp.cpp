#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_inter_SemiBold_48_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x002C, -1 },  // (First char = [0x002C, uni002C], Second char = [0x0020, uni0020], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0020, uni0020], Kerning dist = -1)
    { 0x0030, -1 },  // (First char = [0x0030, uni0030], Second char = [0x002C, uni002C], Kerning dist = -1)
    { 0x0031, -2 },  // (First char = [0x0031, uni0031], Second char = [0x002C, uni002C], Kerning dist = -2)
    { 0x0033, -1 },  // (First char = [0x0033, uni0033], Second char = [0x002C, uni002C], Kerning dist = -1)
    { 0x0034, -1 },  // (First char = [0x0034, uni0034], Second char = [0x002C, uni002C], Kerning dist = -1)
    { 0x0035, -1 },  // (First char = [0x0035, uni0035], Second char = [0x002C, uni002C], Kerning dist = -1)
    { 0x0036, -1 },  // (First char = [0x0036, uni0036], Second char = [0x002C, uni002C], Kerning dist = -1)
    { 0x0037, -6 },  // (First char = [0x0037, uni0037], Second char = [0x002C, uni002C], Kerning dist = -6)
    { 0x0038, -1 },  // (First char = [0x0038, uni0038], Second char = [0x002C, uni002C], Kerning dist = -1)
    { 0x0039, -1 },  // (First char = [0x0039, uni0039], Second char = [0x002C, uni002C], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, uni0044], Second char = [0x002C, uni002C], Kerning dist = -2)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x002C, uni002C], Kerning dist = -2)
    { 0x004A, -2 },  // (First char = [0x004A, uni004A], Second char = [0x002C, uni002C], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, uni004F], Second char = [0x002C, uni002C], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, uni0050], Second char = [0x002C, uni002C], Kerning dist = -2)
    { 0x0051, -2 },  // (First char = [0x0051, uni0051], Second char = [0x002C, uni002C], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x002C, uni002C], Kerning dist = -2)
    { 0x0055, -2 },  // (First char = [0x0055, uni0055], Second char = [0x002C, uni002C], Kerning dist = -2)
    { 0x0056, -5 },  // (First char = [0x0056, uni0056], Second char = [0x002C, uni002C], Kerning dist = -5)
    { 0x0057, -5 },  // (First char = [0x0057, uni0057], Second char = [0x002C, uni002C], Kerning dist = -5)
    { 0x0059, -3 },  // (First char = [0x0059, uni0059], Second char = [0x002C, uni002C], Kerning dist = -3)
    { 0x0066, -3 },  // (First char = [0x0066, uni0066], Second char = [0x002C, uni002C], Kerning dist = -3)
    { 0x0072, -3 },  // (First char = [0x0072, uni0072], Second char = [0x002C, uni002C], Kerning dist = -3)
    { 0x0076, -2 },  // (First char = [0x0076, uni0076], Second char = [0x002C, uni002C], Kerning dist = -2)
    { 0x0077, -4 },  // (First char = [0x0077, uni0077], Second char = [0x002C, uni002C], Kerning dist = -4)
    { 0x0079, -2 },  // (First char = [0x0079, uni0079], Second char = [0x002C, uni002C], Kerning dist = -2)
    { 0x00B0, -7 },  // (First char = [0x00B0, uni00B0], Second char = [0x002C, uni002C], Kerning dist = -7)
    { 0x0030, -1 },  // (First char = [0x0030, uni0030], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0031, -2 },  // (First char = [0x0031, uni0031], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0033, -1 },  // (First char = [0x0033, uni0033], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0034, -1 },  // (First char = [0x0034, uni0034], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0035, -1 },  // (First char = [0x0035, uni0035], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0036, -1 },  // (First char = [0x0036, uni0036], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0037, -6 },  // (First char = [0x0037, uni0037], Second char = [0x002E, uni002E], Kerning dist = -6)
    { 0x0038, -1 },  // (First char = [0x0038, uni0038], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0039, -1 },  // (First char = [0x0039, uni0039], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, uni0044], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x004A, -2 },  // (First char = [0x004A, uni004A], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x004F, -2 },  // (First char = [0x004F, uni004F], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, uni0050], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, uni0050], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0051, -2 },  // (First char = [0x0051, uni0051], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0055, -2 },  // (First char = [0x0055, uni0055], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0056, -5 },  // (First char = [0x0056, uni0056], Second char = [0x002E, uni002E], Kerning dist = -5)
    { 0x0057, -5 },  // (First char = [0x0057, uni0057], Second char = [0x002E, uni002E], Kerning dist = -5)
    { 0x0059, -3 },  // (First char = [0x0059, uni0059], Second char = [0x002E, uni002E], Kerning dist = -3)
    { 0x0066, -3 },  // (First char = [0x0066, uni0066], Second char = [0x002E, uni002E], Kerning dist = -3)
    { 0x0072, -3 },  // (First char = [0x0072, uni0072], Second char = [0x002E, uni002E], Kerning dist = -3)
    { 0x0076, -2 },  // (First char = [0x0076, uni0076], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0077, -4 },  // (First char = [0x0077, uni0077], Second char = [0x002E, uni002E], Kerning dist = -4)
    { 0x0079, -2 },  // (First char = [0x0079, uni0079], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x00B0, -7 },  // (First char = [0x00B0, uni00B0], Second char = [0x002E, uni002E], Kerning dist = -7)
    { 0x002C, -1 },  // (First char = [0x002C, uni002C], Second char = [0x0030, uni0030], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0030, uni0030], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0030, uni0030], Kerning dist = -1)
    { 0x002C, -4 },  // (First char = [0x002C, uni002C], Second char = [0x0031, uni0031], Kerning dist = -4)
    { 0x002E, -4 },  // (First char = [0x002E, uni002E], Second char = [0x0031, uni0031], Kerning dist = -4)
    { 0x0041, -2 },  // (First char = [0x0041, uni0041], Second char = [0x0031, uni0031], Kerning dist = -2)
    { 0x004C, -2 },  // (First char = [0x004C, uni004C], Second char = [0x0031, uni0031], Kerning dist = -2)
    { 0x0061, -2 },  // (First char = [0x0061, uni0061], Second char = [0x0031, uni0031], Kerning dist = -2)
    { 0x0068, -2 },  // (First char = [0x0068, uni0068], Second char = [0x0031, uni0031], Kerning dist = -2)
    { 0x006D, -2 },  // (First char = [0x006D, uni006D], Second char = [0x0031, uni0031], Kerning dist = -2)
    { 0x006E, -2 },  // (First char = [0x006E, uni006E], Second char = [0x0031, uni0031], Kerning dist = -2)
    { 0x002C, -1 },  // (First char = [0x002C, uni002C], Second char = [0x0033, uni0033], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0033, uni0033], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0033, uni0033], Kerning dist = -1)
    { 0x0032, -1 },  // (First char = [0x0032, uni0032], Second char = [0x0034, uni0034], Kerning dist = -1)
    { 0x0037, -3 },  // (First char = [0x0037, uni0037], Second char = [0x0034, uni0034], Kerning dist = -3)
    { 0x0054, -3 },  // (First char = [0x0054, uni0054], Second char = [0x0034, uni0034], Kerning dist = -3)
    { 0x0056, -2 },  // (First char = [0x0056, uni0056], Second char = [0x0034, uni0034], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x0034, uni0034], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, uni0059], Second char = [0x0034, uni0034], Kerning dist = -3)
    { 0x0066, -3 },  // (First char = [0x0066, uni0066], Second char = [0x0034, uni0034], Kerning dist = -3)
    { 0x006B, -2 },  // (First char = [0x006B, uni006B], Second char = [0x0034, uni0034], Kerning dist = -2)
    { 0x00B0, -2 },  // (First char = [0x00B0, uni00B0], Second char = [0x0034, uni0034], Kerning dist = -2)
    { 0x002C, -1 },  // (First char = [0x002C, uni002C], Second char = [0x0036, uni0036], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0036, uni0036], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0036, uni0036], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, uni002C], Second char = [0x0037, uni0037], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0037, uni0037], Kerning dist = -1)
    { 0x0030, -1 },  // (First char = [0x0030, uni0030], Second char = [0x0037, uni0037], Kerning dist = -1)
    { 0x0037,  1 },  // (First char = [0x0037, uni0037], Second char = [0x0037, uni0037], Kerning dist = 1)
    { 0x0039, -1 },  // (First char = [0x0039, uni0039], Second char = [0x0037, uni0037], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, uni002C], Second char = [0x0038, uni0038], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0038, uni0038], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0038, uni0038], Kerning dist = -1)
    { 0x002C, -1 },  // (First char = [0x002C, uni002C], Second char = [0x0039, uni0039], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0039, uni0039], Kerning dist = -1)
    { 0x0037, -2 },  // (First char = [0x0037, uni0037], Second char = [0x003A, uni003A], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x003A, uni003A], Kerning dist = -2)
    { 0x0056, -3 },  // (First char = [0x0056, uni0056], Second char = [0x003A, uni003A], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x003A, uni003A], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, uni0059], Second char = [0x003A, uni003A], Kerning dist = -3)
    { 0x002C, -5 },  // (First char = [0x002C, uni002C], Second char = [0x003F, uni003F], Kerning dist = -5)
    { 0x002E, -5 },  // (First char = [0x002E, uni002E], Second char = [0x003F, uni003F], Kerning dist = -5)
    { 0x0041, -3 },  // (First char = [0x0041, uni0041], Second char = [0x003F, uni003F], Kerning dist = -3)
    { 0x0037, -5 },  // (First char = [0x0037, uni0037], Second char = [0x0041, uni0041], Kerning dist = -5)
    { 0x003F, -3 },  // (First char = [0x003F, uni003F], Second char = [0x0041, uni0041], Kerning dist = -3)
    { 0x0044, -2 },  // (First char = [0x0044, uni0044], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x0046, -4 },  // (First char = [0x0046, uni0046], Second char = [0x0041, uni0041], Kerning dist = -4)
    { 0x0047, -1 },  // (First char = [0x0047, uni0047], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x004C,  1 },  // (First char = [0x004C, uni004C], Second char = [0x0041, uni0041], Kerning dist = 1)
    { 0x004F, -2 },  // (First char = [0x004F, uni004F], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x0050, -4 },  // (First char = [0x0050, uni0050], Second char = [0x0041, uni0041], Kerning dist = -4)
    { 0x0051, -2 },  // (First char = [0x0051, uni0051], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x0053, -1 },  // (First char = [0x0053, uni0053], Second char = [0x0041, uni0041], Kerning dist = -1)
    { 0x0054, -4 },  // (First char = [0x0054, uni0054], Second char = [0x0041, uni0041], Kerning dist = -4)
    { 0x0056, -4 },  // (First char = [0x0056, uni0056], Second char = [0x0041, uni0041], Kerning dist = -4)
    { 0x0057, -3 },  // (First char = [0x0057, uni0057], Second char = [0x0041, uni0041], Kerning dist = -3)
    { 0x0059, -4 },  // (First char = [0x0059, uni0059], Second char = [0x0041, uni0041], Kerning dist = -4)
    { 0x0062, -2 },  // (First char = [0x0062, uni0062], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x0066, -2 },  // (First char = [0x0066, uni0066], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x006F, -2 },  // (First char = [0x006F, uni006F], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, uni0070], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x0071, -2 },  // (First char = [0x0071, uni0071], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x0072, -2 },  // (First char = [0x0072, uni0072], Second char = [0x0041, uni0041], Kerning dist = -2)
    { 0x0076, -3 },  // (First char = [0x0076, uni0076], Second char = [0x0041, uni0041], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, uni0077], Second char = [0x0041, uni0041], Kerning dist = -3)
    { 0x0079, -3 },  // (First char = [0x0079, uni0079], Second char = [0x0041, uni0041], Kerning dist = -3)
    { 0x00B0, -4 },  // (First char = [0x00B0, uni00B0], Second char = [0x0041, uni0041], Kerning dist = -4)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x0042, uni0042], Kerning dist = 1)
    { 0x0041, -2 },  // (First char = [0x0041, uni0041], Second char = [0x0043, uni0043], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x0043, uni0043], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0043, uni0043], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0043, uni0043], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, uni0056], Second char = [0x0043, uni0043], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x0043, uni0043], Kerning dist = -2)
    { 0x0058, -1 },  // (First char = [0x0058, uni0058], Second char = [0x0043, uni0043], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, uni0059], Second char = [0x0043, uni0043], Kerning dist = -2)
    { 0x005A, -2 },  // (First char = [0x005A, uni005A], Second char = [0x0043, uni0043], Kerning dist = -2)
    { 0x00B0, -1 },  // (First char = [0x00B0, uni00B0], Second char = [0x0043, uni0043], Kerning dist = -1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x0044, uni0044], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x0045, uni0045], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x0046, uni0046], Kerning dist = 1)
    { 0x0041, -2 },  // (First char = [0x0041, uni0041], Second char = [0x0047, uni0047], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x0047, uni0047], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0047, uni0047], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0047, uni0047], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, uni0056], Second char = [0x0047, uni0047], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x0047, uni0047], Kerning dist = -2)
    { 0x0058, -1 },  // (First char = [0x0058, uni0058], Second char = [0x0047, uni0047], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, uni0059], Second char = [0x0047, uni0047], Kerning dist = -2)
    { 0x005A, -2 },  // (First char = [0x005A, uni005A], Second char = [0x0047, uni0047], Kerning dist = -2)
    { 0x00B0, -1 },  // (First char = [0x00B0, uni00B0], Second char = [0x0047, uni0047], Kerning dist = -1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x0048, uni0048], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x0049, uni0049], Kerning dist = 1)
    { 0x0037, -5 },  // (First char = [0x0037, uni0037], Second char = [0x004A, uni004A], Kerning dist = -5)
    { 0x0046, -3 },  // (First char = [0x0046, uni0046], Second char = [0x004A, uni004A], Kerning dist = -3)
    { 0x0050, -5 },  // (First char = [0x0050, uni0050], Second char = [0x004A, uni004A], Kerning dist = -5)
    { 0x0054, -4 },  // (First char = [0x0054, uni0054], Second char = [0x004A, uni004A], Kerning dist = -4)
    { 0x0056, -5 },  // (First char = [0x0056, uni0056], Second char = [0x004A, uni004A], Kerning dist = -5)
    { 0x0057, -3 },  // (First char = [0x0057, uni0057], Second char = [0x004A, uni004A], Kerning dist = -3)
    { 0x0059, -2 },  // (First char = [0x0059, uni0059], Second char = [0x004A, uni004A], Kerning dist = -2)
    { 0x0066, -3 },  // (First char = [0x0066, uni0066], Second char = [0x004A, uni004A], Kerning dist = -3)
    { 0x0072, -3 },  // (First char = [0x0072, uni0072], Second char = [0x004A, uni004A], Kerning dist = -3)
    { 0x0076, -3 },  // (First char = [0x0076, uni0076], Second char = [0x004A, uni004A], Kerning dist = -3)
    { 0x0077, -3 },  // (First char = [0x0077, uni0077], Second char = [0x004A, uni004A], Kerning dist = -3)
    { 0x0079, -3 },  // (First char = [0x0079, uni0079], Second char = [0x004A, uni004A], Kerning dist = -3)
    { 0x00B0, -5 },  // (First char = [0x00B0, uni00B0], Second char = [0x004A, uni004A], Kerning dist = -5)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x004B, uni004B], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x004C, uni004C], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x004D, uni004D], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x004E, uni004E], Kerning dist = 1)
    { 0x0041, -2 },  // (First char = [0x0041, uni0041], Second char = [0x004F, uni004F], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x004F, uni004F], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x004F, uni004F], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x004F, uni004F], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, uni0056], Second char = [0x004F, uni004F], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x004F, uni004F], Kerning dist = -2)
    { 0x0058, -1 },  // (First char = [0x0058, uni0058], Second char = [0x004F, uni004F], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, uni0059], Second char = [0x004F, uni004F], Kerning dist = -2)
    { 0x005A, -2 },  // (First char = [0x005A, uni005A], Second char = [0x004F, uni004F], Kerning dist = -2)
    { 0x00B0, -1 },  // (First char = [0x00B0, uni00B0], Second char = [0x004F, uni004F], Kerning dist = -1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x0050, uni0050], Kerning dist = 1)
    { 0x0041, -2 },  // (First char = [0x0041, uni0041], Second char = [0x0051, uni0051], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x0051, uni0051], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0051, uni0051], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0051, uni0051], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, uni0056], Second char = [0x0051, uni0051], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x0051, uni0051], Kerning dist = -2)
    { 0x0058, -1 },  // (First char = [0x0058, uni0058], Second char = [0x0051, uni0051], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, uni0059], Second char = [0x0051, uni0051], Kerning dist = -2)
    { 0x005A, -2 },  // (First char = [0x005A, uni005A], Second char = [0x0051, uni0051], Kerning dist = -2)
    { 0x00B0, -1 },  // (First char = [0x00B0, uni00B0], Second char = [0x0051, uni0051], Kerning dist = -1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x0052, uni0052], Kerning dist = 1)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0053, uni0053], Kerning dist = -1)
    { 0x002C, -2 },  // (First char = [0x002C, uni002C], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x002E, -2 },  // (First char = [0x002E, uni002E], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x003A, -2 },  // (First char = [0x003A, uni003A], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0041, -4 },  // (First char = [0x0041, uni0041], Second char = [0x0054, uni0054], Kerning dist = -4)
    { 0x0044, -2 },  // (First char = [0x0044, uni0044], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0047,  2 },  // (First char = [0x0047, uni0047], Second char = [0x0054, uni0054], Kerning dist = 2)
    { 0x004C, -4 },  // (First char = [0x004C, uni004C], Second char = [0x0054, uni0054], Kerning dist = -4)
    { 0x004F, -2 },  // (First char = [0x004F, uni004F], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0051, -2 },  // (First char = [0x0051, uni0051], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0059,  2 },  // (First char = [0x0059, uni0059], Second char = [0x0054, uni0054], Kerning dist = 2)
    { 0x0061, -2 },  // (First char = [0x0061, uni0061], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0062, -2 },  // (First char = [0x0062, uni0062], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0063, -4 },  // (First char = [0x0063, uni0063], Second char = [0x0054, uni0054], Kerning dist = -4)
    { 0x0065, -2 },  // (First char = [0x0065, uni0065], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0067, -2 },  // (First char = [0x0067, uni0067], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0068, -2 },  // (First char = [0x0068, uni0068], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x006B, -3 },  // (First char = [0x006B, uni006B], Second char = [0x0054, uni0054], Kerning dist = -3)
    { 0x006D, -2 },  // (First char = [0x006D, uni006D], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x006E, -2 },  // (First char = [0x006E, uni006E], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x006F, -2 },  // (First char = [0x006F, uni006F], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, uni0070], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0071, -2 },  // (First char = [0x0071, uni0071], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0072, -3 },  // (First char = [0x0072, uni0072], Second char = [0x0054, uni0054], Kerning dist = -3)
    { 0x0073, -4 },  // (First char = [0x0073, uni0073], Second char = [0x0054, uni0054], Kerning dist = -4)
    { 0x0074, -2 },  // (First char = [0x0074, uni0074], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0075, -2 },  // (First char = [0x0075, uni0075], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, uni0076], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, uni0077], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0078, -2 },  // (First char = [0x0078, uni0078], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, uni0079], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x007A, -2 },  // (First char = [0x007A, uni007A], Second char = [0x0054, uni0054], Kerning dist = -2)
    { 0x003A, -3 },  // (First char = [0x003A, uni003A], Second char = [0x0056, uni0056], Kerning dist = -3)
    { 0x0041, -4 },  // (First char = [0x0041, uni0041], Second char = [0x0056, uni0056], Kerning dist = -4)
    { 0x0044, -2 },  // (First char = [0x0044, uni0044], Second char = [0x0056, uni0056], Kerning dist = -2)
    { 0x0047, -1 },  // (First char = [0x0047, uni0047], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x004C, -4 },  // (First char = [0x004C, uni004C], Second char = [0x0056, uni0056], Kerning dist = -4)
    { 0x004F, -2 },  // (First char = [0x004F, uni004F], Second char = [0x0056, uni0056], Kerning dist = -2)
    { 0x0051, -2 },  // (First char = [0x0051, uni0051], Second char = [0x0056, uni0056], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, uni0052], Second char = [0x0056, uni0056], Kerning dist = -1)
    { 0x0061, -2 },  // (First char = [0x0061, uni0061], Second char = [0x0056, uni0056], Kerning dist = -2)
    { 0x0062, -3 },  // (First char = [0x0062, uni0062], Second char = [0x0056, uni0056], Kerning dist = -3)
    { 0x0065, -2 },  // (First char = [0x0065, uni0065], Second char = [0x0056, uni0056], Kerning dist = -2)
    { 0x0068, -2 },  // (First char = [0x0068, uni0068], Second char = [0x0056, uni0056], Kerning dist = -2)
    { 0x0069,  2 },  // (First char = [0x0069, uni0069], Second char = [0x0056, uni0056], Kerning dist = 2)
    { 0x006A,  2 },  // (First char = [0x006A, uni006A], Second char = [0x0056, uni0056], Kerning dist = 2)
    { 0x006D, -2 },  // (First char = [0x006D, uni006D], Second char = [0x0056, uni0056], Kerning dist = -2)
    { 0x006E, -2 },  // (First char = [0x006E, uni006E], Second char = [0x0056, uni0056], Kerning dist = -2)
    { 0x006F, -3 },  // (First char = [0x006F, uni006F], Second char = [0x0056, uni0056], Kerning dist = -3)
    { 0x0070, -3 },  // (First char = [0x0070, uni0070], Second char = [0x0056, uni0056], Kerning dist = -3)
    { 0x0071, -3 },  // (First char = [0x0071, uni0071], Second char = [0x0056, uni0056], Kerning dist = -3)
    { 0x0073, -2 },  // (First char = [0x0073, uni0073], Second char = [0x0056, uni0056], Kerning dist = -2)
    { 0x0041, -3 },  // (First char = [0x0041, uni0041], Second char = [0x0057, uni0057], Kerning dist = -3)
    { 0x0044, -1 },  // (First char = [0x0044, uni0044], Second char = [0x0057, uni0057], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0057, uni0057], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, uni004F], Second char = [0x0057, uni0057], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, uni0051], Second char = [0x0057, uni0057], Kerning dist = -1)
    { 0x0061, -2 },  // (First char = [0x0061, uni0061], Second char = [0x0057, uni0057], Kerning dist = -2)
    { 0x0062, -2 },  // (First char = [0x0062, uni0062], Second char = [0x0057, uni0057], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, uni0063], Second char = [0x0057, uni0057], Kerning dist = -1)
    { 0x0065, -2 },  // (First char = [0x0065, uni0065], Second char = [0x0057, uni0057], Kerning dist = -2)
    { 0x0068, -2 },  // (First char = [0x0068, uni0068], Second char = [0x0057, uni0057], Kerning dist = -2)
    { 0x0069,  2 },  // (First char = [0x0069, uni0069], Second char = [0x0057, uni0057], Kerning dist = 2)
    { 0x006A,  2 },  // (First char = [0x006A, uni006A], Second char = [0x0057, uni0057], Kerning dist = 2)
    { 0x006D, -2 },  // (First char = [0x006D, uni006D], Second char = [0x0057, uni0057], Kerning dist = -2)
    { 0x006E, -2 },  // (First char = [0x006E, uni006E], Second char = [0x0057, uni0057], Kerning dist = -2)
    { 0x006F, -2 },  // (First char = [0x006F, uni006F], Second char = [0x0057, uni0057], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, uni0070], Second char = [0x0057, uni0057], Kerning dist = -2)
    { 0x0071, -2 },  // (First char = [0x0071, uni0071], Second char = [0x0057, uni0057], Kerning dist = -2)
    { 0x0073, -2 },  // (First char = [0x0073, uni0073], Second char = [0x0057, uni0057], Kerning dist = -2)
    { 0x0043, -1 },  // (First char = [0x0043, uni0043], Second char = [0x0058, uni0058], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, uni0044], Second char = [0x0058, uni0058], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, uni0047], Second char = [0x0058, uni0058], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, uni004F], Second char = [0x0058, uni0058], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, uni0051], Second char = [0x0058, uni0058], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, uni0062], Second char = [0x0058, uni0058], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, uni006F], Second char = [0x0058, uni0058], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, uni0070], Second char = [0x0058, uni0058], Kerning dist = -1)
    { 0x0071, -1 },  // (First char = [0x0071, uni0071], Second char = [0x0058, uni0058], Kerning dist = -1)
    { 0x002C, -3 },  // (First char = [0x002C, uni002C], Second char = [0x0059, uni0059], Kerning dist = -3)
    { 0x002E, -3 },  // (First char = [0x002E, uni002E], Second char = [0x0059, uni0059], Kerning dist = -3)
    { 0x0030, -2 },  // (First char = [0x0030, uni0030], Second char = [0x0059, uni0059], Kerning dist = -2)
    { 0x0039, -2 },  // (First char = [0x0039, uni0039], Second char = [0x0059, uni0059], Kerning dist = -2)
    { 0x0041, -4 },  // (First char = [0x0041, uni0041], Second char = [0x0059, uni0059], Kerning dist = -4)
    { 0x0044, -2 },  // (First char = [0x0044, uni0044], Second char = [0x0059, uni0059], Kerning dist = -2)
    { 0x004C, -4 },  // (First char = [0x004C, uni004C], Second char = [0x0059, uni0059], Kerning dist = -4)
    { 0x004F, -2 },  // (First char = [0x004F, uni004F], Second char = [0x0059, uni0059], Kerning dist = -2)
    { 0x0051, -2 },  // (First char = [0x0051, uni0051], Second char = [0x0059, uni0059], Kerning dist = -2)
    { 0x0061, -4 },  // (First char = [0x0061, uni0061], Second char = [0x0059, uni0059], Kerning dist = -4)
    { 0x0062, -5 },  // (First char = [0x0062, uni0062], Second char = [0x0059, uni0059], Kerning dist = -5)
    { 0x0063, -3 },  // (First char = [0x0063, uni0063], Second char = [0x0059, uni0059], Kerning dist = -3)
    { 0x0065, -5 },  // (First char = [0x0065, uni0065], Second char = [0x0059, uni0059], Kerning dist = -5)
    { 0x0068, -4 },  // (First char = [0x0068, uni0068], Second char = [0x0059, uni0059], Kerning dist = -4)
    { 0x006D, -4 },  // (First char = [0x006D, uni006D], Second char = [0x0059, uni0059], Kerning dist = -4)
    { 0x006E, -4 },  // (First char = [0x006E, uni006E], Second char = [0x0059, uni0059], Kerning dist = -4)
    { 0x006F, -5 },  // (First char = [0x006F, uni006F], Second char = [0x0059, uni0059], Kerning dist = -5)
    { 0x0070, -5 },  // (First char = [0x0070, uni0070], Second char = [0x0059, uni0059], Kerning dist = -5)
    { 0x0071, -5 },  // (First char = [0x0071, uni0071], Second char = [0x0059, uni0059], Kerning dist = -5)
    { 0x0073, -4 },  // (First char = [0x0073, uni0073], Second char = [0x0059, uni0059], Kerning dist = -4)
    { 0x0075, -3 },  // (First char = [0x0075, uni0075], Second char = [0x0059, uni0059], Kerning dist = -3)
    { 0x0076, -2 },  // (First char = [0x0076, uni0076], Second char = [0x0059, uni0059], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, uni0079], Second char = [0x0059, uni0059], Kerning dist = -2)
    { 0x0072, -2 },  // (First char = [0x0072, uni0072], Second char = [0x005A, uni005A], Kerning dist = -2)
    { 0x0077, -2 },  // (First char = [0x0077, uni0077], Second char = [0x005A, uni005A], Kerning dist = -2)
    { 0x0037, -2 },  // (First char = [0x0037, uni0037], Second char = [0x0061, uni0061], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, uni0054], Second char = [0x0061, uni0061], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, uni0056], Second char = [0x0061, uni0061], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, uni0057], Second char = [0x0061, uni0061], Kerning dist = -3)
    { 0x0059, -4 },  // (First char = [0x0059, uni0059], Second char = [0x0061, uni0061], Kerning dist = -4)
    { 0x0066, -1 },  // (First char = [0x0066, uni0066], Second char = [0x0061, uni0061], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x0061, uni0061], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, uni0079], Second char = [0x0061, uni0061], Kerning dist = -1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x0062, uni0062], Kerning dist = 1)
    { 0x0037, -2 },  // (First char = [0x0037, uni0037], Second char = [0x0063, uni0063], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x0063, uni0063], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x0063, uni0063], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, uni0054], Second char = [0x0063, uni0063], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, uni0056], Second char = [0x0063, uni0063], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, uni0057], Second char = [0x0063, uni0063], Kerning dist = -3)
    { 0x0058, -1 },  // (First char = [0x0058, uni0058], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x0059, -5 },  // (First char = [0x0059, uni0059], Second char = [0x0063, uni0063], Kerning dist = -5)
    { 0x0066, -1 },  // (First char = [0x0066, uni0066], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, uni006B], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, uni0077], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, uni0078], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, uni0079], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, uni007A], Second char = [0x0063, uni0063], Kerning dist = -1)
    { 0x0037, -2 },  // (First char = [0x0037, uni0037], Second char = [0x0064, uni0064], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x0064, uni0064], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x0064, uni0064], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, uni0054], Second char = [0x0064, uni0064], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, uni0056], Second char = [0x0064, uni0064], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, uni0057], Second char = [0x0064, uni0064], Kerning dist = -3)
    { 0x0058, -1 },  // (First char = [0x0058, uni0058], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x0059, -5 },  // (First char = [0x0059, uni0059], Second char = [0x0064, uni0064], Kerning dist = -5)
    { 0x0066, -1 },  // (First char = [0x0066, uni0066], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, uni006B], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, uni0077], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, uni0078], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, uni0079], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, uni007A], Second char = [0x0064, uni0064], Kerning dist = -1)
    { 0x0037, -2 },  // (First char = [0x0037, uni0037], Second char = [0x0065, uni0065], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x0065, uni0065], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x0065, uni0065], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, uni0054], Second char = [0x0065, uni0065], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, uni0056], Second char = [0x0065, uni0065], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, uni0057], Second char = [0x0065, uni0065], Kerning dist = -3)
    { 0x0058, -1 },  // (First char = [0x0058, uni0058], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0059, -5 },  // (First char = [0x0059, uni0059], Second char = [0x0065, uni0065], Kerning dist = -5)
    { 0x0066, -1 },  // (First char = [0x0066, uni0066], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, uni006B], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, uni0077], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, uni0078], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, uni0079], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, uni007A], Second char = [0x0065, uni0065], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, uni0072], Second char = [0x0066, uni0066], Kerning dist = 1)
    { 0x0037, -2 },  // (First char = [0x0037, uni0037], Second char = [0x0067, uni0067], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x0067, uni0067], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x0067, uni0067], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, uni0054], Second char = [0x0067, uni0067], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, uni0056], Second char = [0x0067, uni0067], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, uni0057], Second char = [0x0067, uni0067], Kerning dist = -3)
    { 0x0058, -1 },  // (First char = [0x0058, uni0058], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0059, -5 },  // (First char = [0x0059, uni0059], Second char = [0x0067, uni0067], Kerning dist = -5)
    { 0x0066, -1 },  // (First char = [0x0066, uni0066], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, uni006B], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, uni0077], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, uni0078], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, uni0079], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, uni007A], Second char = [0x0067, uni0067], Kerning dist = -1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x0068, uni0068], Kerning dist = 1)
    { 0x0047,  2 },  // (First char = [0x0047, uni0047], Second char = [0x0069, uni0069], Kerning dist = 2)
    { 0x004B,  2 },  // (First char = [0x004B, uni004B], Second char = [0x0069, uni0069], Kerning dist = 2)
    { 0x0047,  2 },  // (First char = [0x0047, uni0047], Second char = [0x006A, uni006A], Kerning dist = 2)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x006B, uni006B], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, uni0074], Second char = [0x006C, uni006C], Kerning dist = 1)
    { 0x0054, -3 },  // (First char = [0x0054, uni0054], Second char = [0x006D, uni006D], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x006D, uni006D], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, uni0059], Second char = [0x006D, uni006D], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, uni0054], Second char = [0x006E, uni006E], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x006E, uni006E], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, uni0059], Second char = [0x006E, uni006E], Kerning dist = -2)
    { 0x0037, -2 },  // (First char = [0x0037, uni0037], Second char = [0x006F, uni006F], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, uni0041], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x006F, uni006F], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x006F, uni006F], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, uni0054], Second char = [0x006F, uni006F], Kerning dist = -4)
    { 0x0056, -3 },  // (First char = [0x0056, uni0056], Second char = [0x006F, uni006F], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, uni0057], Second char = [0x006F, uni006F], Kerning dist = -3)
    { 0x0058, -1 },  // (First char = [0x0058, uni0058], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0059, -5 },  // (First char = [0x0059, uni0059], Second char = [0x006F, uni006F], Kerning dist = -5)
    { 0x0066, -1 },  // (First char = [0x0066, uni0066], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, uni006B], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, uni0072], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, uni0076], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, uni0077], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, uni0078], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, uni0079], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, uni007A], Second char = [0x006F, uni006F], Kerning dist = -1)
    { 0x0054, -3 },  // (First char = [0x0054, uni0054], Second char = [0x0070, uni0070], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x0070, uni0070], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, uni0059], Second char = [0x0070, uni0070], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, uni0054], Second char = [0x0071, uni0071], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x0071, uni0071], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, uni0059], Second char = [0x0071, uni0071], Kerning dist = -2)
    { 0x0054, -3 },  // (First char = [0x0054, uni0054], Second char = [0x0072, uni0072], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x0072, uni0072], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, uni0059], Second char = [0x0072, uni0072], Kerning dist = -2)
    { 0x0037, -2 },  // (First char = [0x0037, uni0037], Second char = [0x0073, uni0073], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, uni0054], Second char = [0x0073, uni0073], Kerning dist = -4)
    { 0x0056, -2 },  // (First char = [0x0056, uni0056], Second char = [0x0073, uni0073], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, uni0057], Second char = [0x0073, uni0073], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, uni0059], Second char = [0x0073, uni0073], Kerning dist = -3)
    { 0x0066, -1 },  // (First char = [0x0066, uni0066], Second char = [0x0073, uni0073], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, uni0041], Second char = [0x0074, uni0074], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, uni004C], Second char = [0x0074, uni0074], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, uni0072], Second char = [0x0074, uni0074], Kerning dist = 1)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x0075, uni0075], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x0075, uni0075], Kerning dist = -2)
    { 0x0054, -4 },  // (First char = [0x0054, uni0054], Second char = [0x0075, uni0075], Kerning dist = -4)
    { 0x0059, -2 },  // (First char = [0x0059, uni0059], Second char = [0x0075, uni0075], Kerning dist = -2)
    { 0x0041, -3 },  // (First char = [0x0041, uni0041], Second char = [0x0076, uni0076], Kerning dist = -3)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x0076, uni0076], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x0076, uni0076], Kerning dist = -2)
    { 0x004C, -3 },  // (First char = [0x004C, uni004C], Second char = [0x0076, uni0076], Kerning dist = -3)
    { 0x0054, -3 },  // (First char = [0x0054, uni0054], Second char = [0x0076, uni0076], Kerning dist = -3)
    { 0x0061, -1 },  // (First char = [0x0061, uni0061], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, uni0062], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, uni0065], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x0068, -1 },  // (First char = [0x0068, uni0068], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, uni006D], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, uni006E], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, uni006F], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, uni0070], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x0071, -1 },  // (First char = [0x0071, uni0071], Second char = [0x0076, uni0076], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, uni0072], Second char = [0x0076, uni0076], Kerning dist = 1)
    { 0x0041, -3 },  // (First char = [0x0041, uni0041], Second char = [0x0077, uni0077], Kerning dist = -3)
    { 0x004B, -3 },  // (First char = [0x004B, uni004B], Second char = [0x0077, uni0077], Kerning dist = -3)
    { 0x0054, -3 },  // (First char = [0x0054, uni0054], Second char = [0x0077, uni0077], Kerning dist = -3)
    { 0x0062, -1 },  // (First char = [0x0062, uni0062], Second char = [0x0077, uni0077], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, uni006F], Second char = [0x0077, uni0077], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, uni0070], Second char = [0x0077, uni0077], Kerning dist = -1)
    { 0x0071, -1 },  // (First char = [0x0071, uni0071], Second char = [0x0077, uni0077], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x0078, uni0078], Kerning dist = -2)
    { 0x0062, -1 },  // (First char = [0x0062, uni0062], Second char = [0x0078, uni0078], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, uni0065], Second char = [0x0078, uni0078], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, uni006F], Second char = [0x0078, uni0078], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, uni0070], Second char = [0x0078, uni0078], Kerning dist = -1)
    { 0x0071, -1 },  // (First char = [0x0071, uni0071], Second char = [0x0078, uni0078], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, uni0072], Second char = [0x0078, uni0078], Kerning dist = 1)
    { 0x0041, -3 },  // (First char = [0x0041, uni0041], Second char = [0x0079, uni0079], Kerning dist = -3)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x0079, uni0079], Kerning dist = -2)
    { 0x004B, -2 },  // (First char = [0x004B, uni004B], Second char = [0x0079, uni0079], Kerning dist = -2)
    { 0x004C, -3 },  // (First char = [0x004C, uni004C], Second char = [0x0079, uni0079], Kerning dist = -3)
    { 0x0054, -3 },  // (First char = [0x0054, uni0054], Second char = [0x0079, uni0079], Kerning dist = -3)
    { 0x0061, -1 },  // (First char = [0x0061, uni0061], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, uni0062], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, uni0065], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x0068, -1 },  // (First char = [0x0068, uni0068], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, uni006D], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, uni006E], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, uni006F], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, uni0070], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x0071, -1 },  // (First char = [0x0071, uni0071], Second char = [0x0079, uni0079], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, uni0072], Second char = [0x0079, uni0079], Kerning dist = 1)
    { 0x0046, -2 },  // (First char = [0x0046, uni0046], Second char = [0x007A, uni007A], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, uni0054], Second char = [0x007A, uni007A], Kerning dist = -2)
    { 0x0041, -4 },  // (First char = [0x0041, uni0041], Second char = [0x00B0, uni00B0], Kerning dist = -4)
    { 0x004C, -6 },  // (First char = [0x004C, uni004C], Second char = [0x00B0, uni00B0], Kerning dist = -6)
    { 0x004C, -2 },  // (First char = [0x004C, uni004C], Second char = [0x00B0, uni00B0], Kerning dist = -2)
};
