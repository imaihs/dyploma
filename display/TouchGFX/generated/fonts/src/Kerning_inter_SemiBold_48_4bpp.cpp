#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_inter_SemiBold_48_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0020, uni0020], Kerning dist = -1)
    { 0x0030, -1 },  // (First char = [0x0030, uni0030], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0031, -2 },  // (First char = [0x0031, uni0031], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0033, -1 },  // (First char = [0x0033, uni0033], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0034, -1 },  // (First char = [0x0034, uni0034], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0035, -1 },  // (First char = [0x0035, uni0035], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0036, -1 },  // (First char = [0x0036, uni0036], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0037, -6 },  // (First char = [0x0037, uni0037], Second char = [0x002E, uni002E], Kerning dist = -6)
    { 0x0038, -1 },  // (First char = [0x0038, uni0038], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0039, -1 },  // (First char = [0x0039, uni0039], Second char = [0x002E, uni002E], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, uni0050], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, uni0050], Second char = [0x002E, uni002E], Kerning dist = -2)
    { 0x00B0, -7 },  // (First char = [0x00B0, uni00B0], Second char = [0x002E, uni002E], Kerning dist = -7)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0030, uni0030], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0030, uni0030], Kerning dist = -1)
    { 0x002E, -4 },  // (First char = [0x002E, uni002E], Second char = [0x0031, uni0031], Kerning dist = -4)
    { 0x0061, -2 },  // (First char = [0x0061, uni0061], Second char = [0x0031, uni0031], Kerning dist = -2)
    { 0x0068, -2 },  // (First char = [0x0068, uni0068], Second char = [0x0031, uni0031], Kerning dist = -2)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0033, uni0033], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0033, uni0033], Kerning dist = -1)
    { 0x0032, -1 },  // (First char = [0x0032, uni0032], Second char = [0x0034, uni0034], Kerning dist = -1)
    { 0x0037, -3 },  // (First char = [0x0037, uni0037], Second char = [0x0034, uni0034], Kerning dist = -3)
    { 0x00B0, -2 },  // (First char = [0x00B0, uni00B0], Second char = [0x0034, uni0034], Kerning dist = -2)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0036, uni0036], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0036, uni0036], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0037, uni0037], Kerning dist = -1)
    { 0x0030, -1 },  // (First char = [0x0030, uni0030], Second char = [0x0037, uni0037], Kerning dist = -1)
    { 0x0037,  1 },  // (First char = [0x0037, uni0037], Second char = [0x0037, uni0037], Kerning dist = 1)
    { 0x0039, -1 },  // (First char = [0x0039, uni0039], Second char = [0x0037, uni0037], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0038, uni0038], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, uni0037], Second char = [0x0038, uni0038], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, uni002E], Second char = [0x0039, uni0039], Kerning dist = -1)
    { 0x002E, -5 },  // (First char = [0x002E, uni002E], Second char = [0x003F, uni003F], Kerning dist = -5)
    { 0x00B0, -1 },  // (First char = [0x00B0, uni00B0], Second char = [0x0043, uni0043], Kerning dist = -1)
    { 0x0037, -2 },  // (First char = [0x0037, uni0037], Second char = [0x0061, uni0061], Kerning dist = -2)
};
